version: "3.8"

services:
  backend:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      MYSQL_ROOT_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: admin

  configurator:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    entrypoint: ["bash", "-c"]
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      SOCKETIO_PORT: "9000"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  create-site:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    entrypoint: ["bash", "-c"]
    command:
      - >
        wait-for-it -t 120 db:3306;
        wait-for-it -t 120 redis-cache:6379;
        wait-for-it -t 120 redis-queue:6379;
        # Wait for configurator to finish
        until [ -f sites/common_site_config.json ]; do echo "Waiting for common_site_config.json..."; sleep 5; done;
        # Create the site (uncomment and run once)
        # bench new-site --no-mariadb-socket --admin-password=admin --db-root-username=root --db-root-password=admin --install-app erpnext --set-default erp-sb1.mitrabisnisdigital.com;
        # bench --site erp-sb1.mitrabisnisdigital.com set-config host_name https://erp-sb1.mitrabisnisdigital.com;

  frontend:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
      - proxy_network # Connects to both internal and external networks
    depends_on:
      - websocket
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      BACKEND: backend:8000
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    labels:
      - "traefik.enable=true"
      # This single regex rule can handle all your sites dynamically!
      - "traefik.http.routers.erpnext-sites.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.mitrabisnisdigital.com`)"
      - "traefik.http.routers.erpnext-sites.entrypoints=websecure"
      - "traefik.http.routers.erpnext-sites.tls.certresolver=myresolver"
      # The service name must be unique per compose project, but Traefik automatically generates it
      # from project name and service name, e.g., erp-sb1_frontend. The following tells Traefik to
      # forward to port 8080 of containers attached to this router.
      - "traefik.http.services.erpnext-sites-service.loadbalancer.server.port=8080"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  queue-long:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command: ["bench", "worker", "--queue", "long,default,short"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  queue-short:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command: ["bench", "worker", "--queue", "short,default"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  scheduler:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command: ["bench", "schedule"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  websocket:
    image: frappe/erpnext:v15.74.0
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command: ["node", "/home/frappe/frappe-bench/apps/frappe/socketio.js"]
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

volumes:
  sites:
  logs:

networks:
  frappe_network:
    external: true # Connects to the network created by the core.yml file
  proxy_network:
    external: true # Connects to the network created by the proxy.yml file
